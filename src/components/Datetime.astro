---
import { LOCALE } from "@/constants";

export interface Props {
  pubDatetime: string | Date;
  modDatetime: string | Date | undefined | null;
  size?: "sm" | "lg";
  class?: string;
}

const {
  pubDatetime,
  modDatetime,
  size = "sm",
  class: className = "",
} = Astro.props;

/* ========== Formatted Datetime ========== */
const myDatetime = new Date(
  modDatetime && modDatetime > pubDatetime ? modDatetime : pubDatetime
);
const date = myDatetime.toLocaleDateString(LOCALE.langTag, {
  year: "numeric",
  month: "short",
  day: "numeric",
});

const time = myDatetime.toLocaleTimeString(LOCALE.langTag, {
  hour: "2-digit",
  minute: "2-digit",
});
---

<div class={`flex space-x-1 ${className}`.trim()}>
  <span class={`${size === "sm" ? "text-xs" : "text-sm"}`}>
    {modDatetime && modDatetime > pubDatetime ? "Updated:" : "Published:"}
    <time datetime={myDatetime.toISOString()}
      >{
        myDatetime.toLocaleDateString(LOCALE.langTag, {
          year: "numeric",
          month: "long",
          day: "numeric",
        })
      }</time
    >
  </span>
</div>
